{"version":3,"sources":["../../src/utils/consume-result.util.ts"],"sourcesContent":["import type { IntoException } from \"@root/types/result.type.js\"\nimport { Effect, Either, identity, pipe } from \"effect\"\n\nexport const consumeResult = <A, E extends IntoException>(\n\teffect: Effect.Effect<A, E>\n) =>\n\tpipe(effect, Effect.either, Effect.runPromise).then(\n\t\tEither.match({\n\t\t\tonLeft: error => {\n\t\t\t\tthrow error\n\t\t\t},\n\t\t\tonRight: identity\n\t\t})\n\t)\n"],"names":["Effect","Either","identity","pipe","consumeResult","effect","either","runPromise","then","match","onLeft","error","onRight"],"mappings":"AACA,SAASA,MAAM,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,IAAI,QAAQ,SAAQ;AAEvD,OAAO,MAAMC,gBAAgB,CAC5BC,SAEAF,KAAKE,QAAQL,OAAOM,MAAM,EAAEN,OAAOO,UAAU,EAAEC,IAAI,CAClDP,OAAOQ,KAAK,CAAC;QACZC,QAAQC,CAAAA;YACP,MAAMA;QACP;QACAC,SAASV;IACV,IACA"}